// new module script

void Tilemap::init()
{
  File* file = File.Open("$DATA$/Maps/Ice_Road.map.json", eFileRead);
  
  String json_string = "";
  
  while(file.EOF == false) {
    json_string = json_string.Append(file.ReadRawLineBack());
  }
    
  JsonParser* parser = new JsonParser;
  
  
  int token_count = 65536;
  JsonToken* t[] = JsonToken.NewArray(token_count);

  int r = parser.Parse(json_string, t, token_count);

  // now that you have the Tokens, you can use them to parse as you wish!
  if (r < 0) Display("Failed to parse JSON: %d\n", r);
  if (r < 1 || t[0].type != eJSON_Tok_OBJECT) Display("Object expected\n");
  
 
  bool next_is_layer1 = false;
  int i_tile;
  for(int i=0; i<r  ; i++)
  {
    JsonToken* tok = t[i];
    
    if(next_is_layer1) 
    {
      if(tok.type == eJSON_Tok_PRIMITIVE)
      {
        if(i_tile >= 1600)
        {
        Display(String.Format("%d ; %s ; %d ; %s ; %d ; %d ; %d", 
          i, tok.ToString(json_string), tok.size , tok.TypeAsString,  tok.start ,  tok.end ,  tok.parent ));   
          
        }
        
        String tstr = tok.ToString(json_string);
        this.layer1[i_tile] = tstr.AsInt;
        i_tile++;
      }
          
      if(tok.type == eJSON_Tok_OBJECT) {    
        Display(String.Format("%d ; %s ; %d ; %s ; %d ; %d ; %d", 
          i, tok.ToString(json_string), tok.size , tok.TypeAsString,  tok.start ,  tok.end ,  tok.parent ));    
        next_is_layer1 = false;  
      }
      
    }
    
    if(tok.parent > 0 && tok.type == eJSON_Tok_ARRAY && t[tok.parent].ToString(json_string) == "layer1") {
      next_is_layer1 = true;
      i_tile = 0;
    }
    
  }
}