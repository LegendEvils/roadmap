// new module script


int ZoneManager::GetZoneID_FromObjPos(float x, float z)
{
  int z_x = (FloatToInt(x) + this.WorldWidth/2) / (this.WorldWidth/this.ZoneXYCount);
  int z_y = (FloatToInt(z) + this.WorldHeight/2)  / (this.WorldHeight/this.ZoneXYCount);
  
  return z_x * this.ZoneXYCount + z_y;
}

protected void ZoneManager::_AddObjectToZone(Mode7Object* m7obj, int obj_id)
{
  int zone_id = this.GetZoneID_FromObjPos(m7obj.X, m7obj.Z);
  
  int zone_real_id = zone_id * MAX_OBJ_PER_ZONE + this.ZoneObjectCount[zone_id];
  
  this.ZoneObjectCount[zone_id]++;
  this.ZoneObject[zone_real_id] = obj_id ;
}

void ZoneManager::RefreshObjectZones()
{
  for(int i=0; i<MAX_ZONES; i++) 
  {
    this.ZoneObjectCount[i] = 0;
  }
  
  for(int i=0; i<this.ObjectCount; i++)
  {
    this._AddObjectToZone(this.Objects[i], i);    
  }  
}

protected void ZoneManager::_AdjustActiveZones()
{
  int current_id = this.CurrentX * this.ZoneXYCount + this.CurrentY;
 
  int min_zn_x,  max_zn_x, min_zn_y, max_zn_y;
  
  int mid_x, mid_y;
  
  mid_x = this.CurrentX;
  mid_y = this.CurrentY;
  
  if(mid_x < 1) mid_x = 1;
  if(mid_x > this.ZoneXYCount - 2) mid_x = this.ZoneXYCount - 2;
  
  if(mid_y < 1) mid_y = 1;
  if(mid_y > this.ZoneXYCount - 2) mid_y = this.ZoneXYCount - 2;
  
  
  min_zn_x = mid_x - 1;
  max_zn_x = mid_x + 1;
  min_zn_y = mid_y - 1;
  max_zn_y = mid_y + 1;
  
  int k=0;
  for(int i=min_zn_x; i<=max_zn_x; i++)
  {
    for(int j=min_zn_y; j<=max_zn_y; j++)
    {
      this._ActiveZones[k] = i*this.ZoneXYCount + j;
      
      k++;
    }
  }
}

void ZoneManager::UpdateCurrentPos(float x, float z)
{
  this.PreviousX = this.CurrentX;
  this.PreviousY = this.CurrentY;
  
  this.CurrentX = (FloatToInt(x) + this.WorldWidth/2) / (this.WorldWidth/this.ZoneXYCount);
  this.CurrentY = (FloatToInt(z) + this.WorldHeight/2)  / (this.WorldHeight/this.ZoneXYCount);
  
  this.ZoneChanged = this.CurrentX != this.PreviousX || this.CurrentY != this.PreviousY;
  if(this.ZoneChanged) {
    this.RefreshObjectZones();
    this._AdjustActiveZones();
  }
}


Mode7Object* ZoneManager::AddObject(int x, int z, float factor, int graphic)
{
  if (this.ObjectCount == MAX_OBJECTS) return null;
  this.Objects[this.ObjectCount] = new Mode7Object;
  this.Objects[this.ObjectCount].Visible = true;
  this.Objects[this.ObjectCount].X = IntToFloat(x);
  this.Objects[this.ObjectCount].Y = 0.0;
  this.Objects[this.ObjectCount].Z = IntToFloat(z);
  this.Objects[this.ObjectCount].Factor = factor;
  this.Objects[this.ObjectCount].Graphic = graphic;
  
  this._AddObjectToZone(this.Objects[this.ObjectCount], this.ObjectCount);
  
  this.ObjectCount++;
  return this.Objects[this.ObjectCount-1];
}

void ZoneManager::ResetObjectActiveZone()
{
  this._iZone = 0;
  this._iZoneObject = 0;
}

Mode7Object* ZoneManager::GetNextObjectActiveZone()
{
  if(this._iZone >= MAX_ACTIVE_ZONES) return null;
  
  int zone_id = this._ActiveZones[this._iZone];
  
  if(this._iZoneObject > this.ZoneObjectCount[zone_id])
  {
    this._iZone++;
    this._iZoneObject = 0;
  }
  
  if(this._iZone >= MAX_ACTIVE_ZONES) return null;
  zone_id = this._ActiveZones[this._iZone];
  
  int zone_real_id = zone_id * MAX_OBJ_PER_ZONE + this._iZoneObject;
  int obj_id = this.ZoneObject[zone_real_id];
  
  this._iZoneObject++;
  return this.Objects[obj_id];
}