// room script file

struct Vec3 {
  float x, y, z;
};

float turn_speed = 1.4;
float max_speed_forward = 4.0;
float max_speed_forward_road = 4.0;
float max_speed_forward_dirt = 2.0;
float max_speed_backward = 2.0;

ZoneManager zManager;

int timer, ground_frame;

// the little player ship
Mode7Object* o7car;
Mode7Object* o7player;

InputParams* hidCar;
InputParams* hidPlayer;

DynamicSprite* ground;

void UpdateGroundSprite()
{
  if(ground == null) return;
  
  DrawingSurface* surf = ground.GetDrawingSurface();
  
  DrawingSurface* rsurf = Room.GetDrawingSurfaceForBackground();
  surf.DrawSurface(rsurf);
  rsurf.Release();
  
  zManager.ResetObjectVicinityZones();
  Mode7Object* obj = zManager.GetNextObjectVicinityZones();
  
  int obj_size = 32;
  int gr_adjust_x = - obj_size/2 + ground.Width/2;
  int gr_adjust_y = - obj_size/2 + ground.Height/2;
  
  while(obj != null)
  {
    if(obj == o7car) {
      obj = zManager.GetNextObjectVicinityZones();
      continue;
    }
    
    int obj_x = FloatToInt(obj.X) + gr_adjust_x;
    int obj_y = FloatToInt(obj.Z) + gr_adjust_y;
    surf.DrawImage(obj_x, obj_y, obj.Graphic, 0, obj_size, obj_size);
    
    obj = zManager.GetNextObjectVicinityZones();
  }
  
  surf.Release();
  m7.SetGroundSprite(ground.Graphic);
}

TerrainType current_terrain;

float abs(float x) {
  if (x < 0.0) return -x;
  return x;
}


bool in_car;



void togglePlayMode() {
  if(in_car) {
    //Display("Out of Car!");
    
    // place player on the side of driver door
    float sin_ortho = Maths.Sin(Maths.DegreesToRadians(o7car.Angle)-Maths.Pi/2.0);
    float cos_ortho = Maths.Cos(Maths.DegreesToRadians(o7car.Angle)-Maths.Pi/2.0);    
    o7player.X = o7car.X + sin_ortho * 20.0;
    o7player.Z = o7car.Z - cos_ortho * 20.0;
    
    m7.SetCamera(o7player.X, o7player.Y + 6.0, o7player.Z, 0.0, 0.0, 175.0);
  } else {
    
    m7.SetCamera(o7car.X, 25.0, o7car.Z, 0.0, 0.0, 175.0);
  }
  
  in_car = !in_car;  
}

void processPlayerShip() {
  // zone
  int w = Room.Width;
  int h = Room.Height;
  int x = FloatToInt(o7car.X, eRoundNearest) + w / 2;
  int y = FloatToInt(o7car.Z, eRoundNearest) + h / 2;
  current_terrain = eTT_Road;
  if (x >= 0 && x < w && y >= 0 && y < h) {
    current_terrain = GetTerrainAtRoomXY(x, y);
  }
  if (current_terrain == eTT_Dirt) {
    max_speed_forward = max_speed_forward_dirt;
    if (hidCar.CurrentSpeed != 0.0) {
      int step = FloatToInt(hidCar.MaxSpeedForward / abs(hidCar.CurrentSpeed), eRoundNearest) + 3;
      if (step != 0 && (timer % step) < step/2) o7car.Y = 0.5;
      else o7car.Y = 0.0;
    }
  }
  else {
    o7car.Y = 0.0;
    max_speed_forward = max_speed_forward_road;
  }
}  

void drawSplashes()
{
  if (hidCar.CurrentSpeed > 0.0 && current_terrain == eTT_Dirt) {
    DrawingSurface* ds = m7.Screen.GetDrawingSurface();
    
    ds.DrawImage(m7.Objects[0].ScreenX, m7.Objects[0].ScreenY, 24, 0, m7.Objects[0].ScreenWidth, m7.Objects[0].ScreenHeight);
    ds.Release();
  }
}

void update_m7wobjs_from_zmanager()
{
  m7.RemoveAllsObjects();
  
  zManager.ResetObjectActiveZones();
  //zManager.ResetObjectIteratingZone();
  Mode7Object* obj = zManager.GetNextObjectActiveZones();
  //Mode7Object* obj = zManager.GetNextObjectIteratingZone();
  while(obj != null)
  {
    m7.AddExternalObject(obj);
    
    obj = zManager.GetNextObjectActiveZones();
    //obj = zManager.GetNextObjectIteratingZone();
  }
  
  UpdateGroundSprite();
}

// room events
function room_Load()
{
  zManager.WorldWidth = 1024;
  zManager.WorldHeight = 1024;
  zManager.ZoneXYCount = 6;
  
  hidCar = InputParams.NewInputParams(1.4, 4.0, 4.0, 2.0, 2.0);
  
  hidPlayer = InputParams.NewInputParams(1.4, 4.0, 4.0, 2.0, 2.0);
  
  // show FPS
  Debug(4, 1);
    
  o7car = zManager.AddObject(372, 185, 0.36, 27);
  o7player = zManager.AddObject(372, 185, 0.36, 2);
  o7player.Visible = false;
  
  for(int i=0; i<720; i++)
  {
    int obj_x, obj_y;
    do {
      obj_x = Random(1024)-512;
      obj_y = Random(1024)-512;
    } while (GetTerrainAtRoomXY(obj_x+512, obj_y+512) != eTT_Dirt);
    
    int rnd = Random(2);
    int gfx = 9;
    if(rnd == 2) gfx = 6;
    
    zManager.AddObject(obj_x, obj_y, 1.0, gfx);      
  }
  
  update_m7wobjs_from_zmanager();
  
  int zones_slot = 23;
  
  m7.SetViewscreen(VIEW_SCREEN_WIDTH, VIEW_SCREEN_HEIGHT);
  m7.SetBgColor(13823);
  m7.SetSkyColor(12255);
  
  m7.SetCamera(0.0, 25.0, 0.0, 0.0, 0.0, 175.0);
  togglePlayMode();
}



function room_AfterFadeIn() {
  
  DrawingSurface* surf = Room.GetDrawingSurfaceForBackground();
  ground = DynamicSprite.CreateFromDrawingSurface(surf, 0, 0, 1024, 1024);
  surf.Release();
  
  m7.SetGroundSprite(ground.Graphic);
  m7.SetHorizonSprite(64);
  
}

function room_RepExec()
{
  timer++;
  if (timer == 48) timer = 0;
  
  
 
  if(in_car) {
    input_car(o7car, hidCar);
    
    m7.CameraAngleX = 0.0;
    
    m7.TargetCamera(o7car.X, o7car.Y, o7car.Z, o7car.Angle, eCameraTarget_FollowBehind);
    zManager.UpdateCurrentPos(o7car.X, o7car.Z);

    int x = FloatToInt(o7car.X)+Room.Width/2;
    int y = FloatToInt(o7car.Z)+Room.Height/2;
    UpdateMinimap(x, y);
  } else {
    input_player(o7player, hidPlayer);
    
    m7.CameraAngleX = hidPlayer.AngleX;
    
    m7.TargetCamera(o7player.X, o7player.Y, o7player.Z, o7player.Angle, eCameraTarget_FirstPerson);
    zManager.UpdateCurrentPos(o7player.X, o7player.Z);
    
    int x = FloatToInt(o7player.X)+Room.Width/2;
    int y = FloatToInt(o7player.Z)+Room.Height/2;
    UpdateMinimap(x, y);
  }
  
  if(zManager.ZoneChanged)
  {
   // aSfx_coin_single4.Play();
    update_m7wobjs_from_zmanager();
  }
  
  m7.UpdateObjects();
  
  // determine kart sprite
  int kart_sprite = m7.GetAngleObjectAndCamera(o7car) / 22;
  if (kart_sprite <= 0) {
    kart_sprite = 27 - kart_sprite;
  } else {
    kart_sprite = 43 - kart_sprite;
  }        
  
  o7car.Graphic = kart_sprite; 
 // m7.ResetGround();
  m7.Draw();
 // drawSplashes();
  m7.DrawObjects();
  
  gScreen.BackgroundGraphic = m7.Screen.Graphic;
}

void on_key_press(eKeyCode k) {
  m7.DebugKeyPress(k);
  
  if(k == eKeyC) {
    togglePlayMode();
  }
  
}

// Clouds: ansimuz - Sunnyland
// Water: zabin - The Battle for Wesnoth Water
// Ship: helianthus games - FREE pixel art Viking ship 16 directions